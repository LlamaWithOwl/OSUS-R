<!--
==============================================================================
 This software is part of the Open Standard for Unattended Sensors (OSUS)
 reference implementation (OSUS-R).

 To the extent possible under law, the author(s) have dedicated all copyright
 and related and neighboring rights to this software to the public domain
 worldwide. This software is distributed without any warranty.

 You should have received a copy of the CC0 Public Domain Dedication along
 with this software. If not, see
 <http://creativecommons.org/publicdomain/zero/1.0/>.
==============================================================================
-->

<!-- 

    This file should be included if a project contains protocol buffer files that need to be compiled. 

    protoc.include - property must be declared in project build file as a list of space delimited directories with 
                     -I prepended to each entry for the directories containing proto files that included by the proto
                     files being compiled.
-->

<project name="protobuf">
    
    <import file="../build.xml" />
    
    <target name="compile" depends="compile-protos">
        <!-- must call template.compile so the variables are re-initialized, otherwise the Java soruce generated by 
             compile-protos will not be compiled (init will check for source and set a property). -->
        <antcall target="template.compile" inheritall="no" />
    </target>
        
    <target name="clean" depends="clean-proto-gen-source,template.clean" />
    
    <target name="clean-proto-gen-source" depends="init" 
        description="removes generated protocol buffer class files">
        <delete failonerror="false" includeemptydirs="true">
            <fileset dir="${src}" includes="**/*.java" excludes="**/package-info.java" />
        </delete>
    </target>

    <target name="compile-protos" depends="init,clean-proto-gen-source" 
        description="Generate protocol buffer classes">
        <mkdir dir="${src}" />
        <echo>Running protoc with executable [${protoc}]</echo>
        <exec executable="${protoc}" failonerror="false" outputproperty="protoc.version">
            <arg line="--version" />
        </exec>
        <if>
            <not>
                <equals arg1="${protoc.version}" arg2="libprotoc 2.6.1"/>
            </not>
            <then>
                <fail message="Need protoc version 2.6.1, but [${protoc}] is ${protoc.version}" />
            </then>
        </if>
        <apply executable="${protoc}" failonerror="true">
            <arg value="--java_out=${src}" />
            <arg line="${protoc.include}"/>
            <fileset dir="proto" includes="**/*.proto" />
            <fileset dir="${target-dir}" includes="proto/**/*.proto" />
        </apply>
    </target>
    
</project>