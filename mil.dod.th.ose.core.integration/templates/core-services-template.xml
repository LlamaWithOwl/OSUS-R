<?xml version="1.0" encoding="UTF-8"?>
<!--
==============================================================================
 This software is part of the Open Standard for Unattended Sensors (OSUS)
 reference implementation (OSUS-R).

 To the extent possible under law, the author(s) have dedicated all copyright
 and related and neighboring rights to this software to the public domain
 worldwide. This software is distributed without any warranty.

 You should have received a copy of the CC0 Public Domain Dedication along
 with this software. If not, see
 <http://creativecommons.org/publicdomain/zero/1.0/>.
==============================================================================
-->
<p:MissionProgramTemplate xmlns:p="http://th.dod.mil/core/mp/model" 
    xmlns:shared="http://th.dod.mil/core/types" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://th.dod.mil/core/mp/model ../resources/missionProgramSchema/MissionProgramTemplate.xsd ">
  <p:source>
  <![CDATA[obj = 
{
    execute: function()
    {
        // Main functionality
        //bundle context
        bundle = bndCnt.getBundle(5);
        // verify metaType service is available
        info = metaType.getMetaTypeInformation(bundle);
        //asset directory service
        asset = astDirSvc.getAssetByName(assetName);
        //custom comms service
        cusComSvc.getTransportLayers();
        //address management
        addMgrSvc.printDeep(java.lang.System.out);

        //log service
        logSvc.info(msg, []);
        //test asset
        observation = asset.captureData();
        try
        {
            //observation store, validation of the observation will happen within the persist call
            obsStr.persist(observation);
        }
        catch (e)
        {
            logSvc.error(e.javaException, "error", []);  
        }
        //mission program manager
        misPrgMgr.getActiveProgramsUsingTemplate("core-services-test");
        //terra harvest system
        terHrvSys.getName();
        //terra havest controller
        terHrvCtl.getVersion();
        
        clazz = astDirSvc.getAssetFactories().iterator().next().getCapabilities().getClass()
        object = astDirSvc.getAssetFactories().iterator().next().getCapabilities();
        // XML/JAXB/Schema services
        xmlByte = xmlMrshlSvc.createXmlByteArray(object, true);
        xmlUnmrshlSvc.getXmlObject(clazz, xmlByte);
        validator.validate(object);
        
        //Template program manager
        tmpltPrgMgr.getMissionTemplateNames();
    },
    test: function()
    {
        // this function is not called from tests and does not need to be
        return TestResult.class.static.PASSED;
    },
    shutdown: function()
    {
        logSvc.info("Core services script is shutting down!.", []);
    }
};]]>
</p:source>
  <p:name>core-services-template</p:name>
  <p:description>See the bindings within the mission program manager. This verifies 
      that those binding of services are actually accessible and fully functional 
      from within a mission script.</p:description>

  <p:withInterval>false</p:withInterval>
  <p:withImageCapture>false</p:withImageCapture>
  <p:withSensorTrigger>false</p:withSensorTrigger>
  <p:withTimerTrigger>false</p:withTimerTrigger>
  <p:withPanTilt>false</p:withPanTilt>

  <p:supportTestExecution>true</p:supportTestExecution>

    <p:variableMetaData>
    <shared:name>assetName</shared:name>
    <shared:description>Name of the asset.</shared:description>
    <shared:humanReadableName>hrnassetName</shared:humanReadableName>
    <p:type>String</p:type>
  </p:variableMetaData>
  <p:variableMetaData>
    <shared:name>msg</shared:name>
    <shared:description>Message to access from within the script.</shared:description>
    <shared:humanReadableName>hrnMsg</shared:humanReadableName>
    <p:type>String</p:type>
  </p:variableMetaData>
    <p:variableMetaData>
    <shared:name>thName</shared:name>
    <shared:description>The name that will be assigned to the running controller.</shared:description>
    <shared:humanReadableName>hrnthName</shared:humanReadableName>
    <p:type>String</p:type>
  </p:variableMetaData>

</p:MissionProgramTemplate>
