<?xml version="1.0" encoding="UTF-8"?>
<!--
==============================================================================
 This software is part of the Open Standard for Unattended Sensors (OSUS)
 reference implementation (OSUS-R).

 To the extent possible under law, the author(s) have dedicated all copyright
 and related and neighboring rights to this software to the public domain
 worldwide. This software is distributed without any warranty.

 You should have received a copy of the CC0 Public Domain Dedication along
 with this software. If not, see
 <http://creativecommons.org/publicdomain/zero/1.0/>.
==============================================================================
-->
<p:MissionProgramTemplate xmlns:p="http://th.dod.mil/core/mp/model" 
    xmlns:shared="http://th.dod.mil/core/types" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://th.dod.mil/core/mp/model ../resources/missionProgramSchema/MissionProgramTemplate.xsd ">
  <p:source>
  <![CDATA[obj = 
{
    execute: function()
    {
        // Main functionality
        importClass(org.osgi.service.event.EventHandler);
 
        obj = 
        { 
            handleEvent: function(event) 
            {
                uuid = event.getProperty("asset.observation.uuid");
                prsDatStr.persist(event.getTopic().getClass(), uuid, "test", event.getTopic());
             } 
        };

        handler = new EventHandler(obj);

        evtHndHlp.registerHandler(handler,
        "mil/dod/th/core/asset/Asset/DATA_CAPTURED", "(obj.uuid=" + assetUuid + ")");
    },
    test: function()
    {
        uuid = event.getProperty("asset.observation.uuid");
        return TestResult.class.static.PASSED;
    },
    shutdown: function()
    {
        logSvc.info("Asset Event script is shutting down!.", []);
    }
};]]>
</p:source>
  <p:name>asset-event-template</p:name>
  <p:description> This script captures an observation, registers the 
      event, and persists the observation made.</p:description>

  <p:withInterval>false</p:withInterval>
  <p:withImageCapture>false</p:withImageCapture>
  <p:withSensorTrigger>false</p:withSensorTrigger>
  <p:withTimerTrigger>false</p:withTimerTrigger>
  <p:withPanTilt>false</p:withPanTilt>

  <p:supportTestExecution>true</p:supportTestExecution>

  <p:variableMetaData>
    <shared:name>assetUuid</shared:name>
    <shared:description>The UUID of the asset to be bound to this mission.</shared:description>
    <shared:humanReadableName>AssetUUID</shared:humanReadableName>
    <p:type>String</p:type>
  </p:variableMetaData>
</p:MissionProgramTemplate>
